{"version":3,"file":"static/js/648.7c3154a9.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","arguments","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}